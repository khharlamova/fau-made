pipeline DataPipeline {

    ZipExtractorFromDownload
        -> DataFilePickerFromZip
        -> DataTextFileInterpreterFromZip
        -> DataCSVInterpreterFromCSV
        -> RenameColumnHeaderInCSV
        -> DataTableInterpreterInCSV
        -> CelsiusToFahrenheitTemperatureTransformation
        -> CelsiusToFahrenheitBatteryTemperatureTransformation        
        -> DataLoader;


    // Download the zip file and interpret it.
    block ZipExtractorFromDownload oftype GTFSExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    // Pick csv file from the zip file 
    block DataFilePickerFromZip oftype FilePicker {
        path: "/data.csv";
    }


    block DataTextFileInterpreterFromZip oftype TextFileInterpreter { }
    

    block DataCSVInterpreterFromCSV oftype CSVInterpreter {
        delimiter: ";";
    }


    block RenameColumnHeaderInCSV oftype CellWriter {
    at: range A1:J1;
    write: ["id", "producer","model", "month","temperature", "","", "","", "battery_temperature"];
    }


    block DataTableInterpreterInCSV oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype ValidateIdFilter,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype integer,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal,
        ];
    }


    block CelsiusToFahrenheitTemperatureTransformation oftype TableTransformer {
    inputColumns: ['temperature'];
    outputColumn: 'temperature';
    use: CelsiusToFahrenheit;
    }


    block CelsiusToFahrenheitBatteryTemperatureTransformation oftype TableTransformer {
    inputColumns: ['battery_temperature'];
    outputColumn: 'battery_temperature';
    use: CelsiusToFahrenheit;
    }


    block DataLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }


valuetype ValidateIdFilter oftype integer {
    constraints: [
        ValidateId,
    ];
}


constraint ValidateId oftype RangeConstraint {
lowerBound: 1;
}


 transform CelsiusToFahrenheit {
   from Celsius oftype decimal;
   to Fahrenheit oftype decimal;
   Fahrenheit: (Celsius * 9/5) + 32;
 }


}
