pipeline GTFSDataPipeline {
    GTFSDownloader -> GTFSUnzipper -> StopsFilePicker -> StopsTextFileInterpreter -> StopsCSVInterpreter -> RenameStopsHeader -> StopsTableInterpreter -> GTFSLoader;

    // download zip file
    block GTFSDownloader oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    // unzip the downloaded file
    block GTFSUnzipper oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    // get the file
    block StopsFilePicker oftype FilePicker {
        path: "/stops.txt";
    }

    // interpret the file correctly
    block StopsTextFileInterpreter oftype TextFileInterpreter {
        encoding: "utf8";
    }

    // interpret the file as CSV
    block StopsCSVInterpreter oftype CSVInterpreter {
        delimiter: ",";
        enclosing: '"';
    }

    // select and rename the column headers as per task
    block RenameStopsHeader oftype CellWriter {
        at: range A1:E1;
        write: ["stop_id", "stop_name", "stop_lat", "stop_lon", "zone_id"];
    }

    // interpret the sheet as a table by adding structure
    block StopsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype PositiveID,
            "stop_name" oftype text,
            "stop_lat" oftype Latitude,
            "stop_lon" oftype Longitude,
            "zone_id" oftype integer
        ];
    }

    // load the table into a sink, here into an SQLite file
    block GTFSLoader oftype SQLiteLoader {
        table: "stops";
        file: "gtfs.sqlite";
    }
}

    // should be positive as per task
    valuetype PositiveID oftype integer {
        constraints: [PositiveIDConstraint];
    }
    
    constraint PositiveIDConstraint on integer:
        value >= 1;

    // should stay within the range
    valuetype Latitude oftype decimal {
        constraints: [LatitudeConstraint];
    }
    
    constraint LatitudeConstraint on decimal:
        value >= -90 and value <= 90;

    valuetype Longitude oftype decimal {
        constraints: [LongitudeConstraint];
    }
    
    constraint LongitudeConstraint on decimal:
        value >= -90 and value <= 90;
